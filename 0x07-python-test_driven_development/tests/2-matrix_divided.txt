The 'matrix_divided' module
==========================

Using ''matrix_divided''
--------------------------


This is a text file in reStructuredText format. First import ''matrix_divided''
from the 'matrix_divided' module.

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

:: A valid case - Integer Division

>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]

>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

:: A valid case - Float Division

>>> matrix = [
... [1.0, 2.5, 3.7],
... [4.8, 5.2, 6.9], 
... [7.3, 8.1, 9.0]
... ]

>>> matrix_divided(matrix, 2.5)
[[0.4, 1.0, 1.48], [1.92, 2.08, 2.76], [2.92, 3.24, 3.6]]

:: A valid case - Combined Float and Integer

>>> matrix = [
... [1, -2.2, 3, 4.4, 5],
... [-6.6, 7.00, 8, 9.999, 10]
... ]

>>> matrix_divided(matrix, 3)
[[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

:: Invalid Case - Non-numeric Matrix

>>> matrix = [
... [1, 2, 'a'],
... [4, 5, 6], 
... [7, 8, 9]
... ]

>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

:: Invalid Case - Inconsistent Row Size

>>> matrix = [
... [1, 2, 3],
... [4, 5], 
... [7, 8, 9]
... ]

>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

:: Invalid Case - Non numeric Divisor

>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]

>>> matrix_divided(matrix, 'a')
Traceback (most recent call last):
	...
TypeError: div must be a number

:: Invalid Case - Division by Zero

>>> matrix = [
... [1, 2, 3],
... [4, 5, 6]
... ]

>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

:: Invalid Case - Not a list

>>> matrix = None
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats


:: Edge Case - Empty Matrix

>>> matrix = []

>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats


:: Edge Case - Empty List in a matrix

>>> matrix = [[]]

>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats


:: Edge Case - Single Element Matrix

>>> matrix = [[5]]
>>> matrix_divided(matrix, 2)
[[2.5]]

:: Edge Case - Large Matrix

>>> matrix = [[1] * 1000] * 1000

>>> result = matrix_divided(matrix, 2)
>>> result[:3] # doctest: +ELLIPSIS
[[0.5, 0.5, 0.5, ..., 0.5], [0.5, 0.5, 0.5, ..., 0.5], [0.5, 0.5, 0.5, ..., 0.5]]

:: Edge Case - Decimal Divsion Result 

>>> matrix = [
... [3, 7, 10],
... [21, 5, 8], 
... [6, 9, 15]
... ]

>>> matrix_divided(matrix, 3)
[[1.0, 2.33, 3.33], [7.0, 1.67, 2.67], [2.0, 3.0, 5.0]]
