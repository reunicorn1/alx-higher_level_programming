The '3-say_my_name' module
==========================

Using ''say_my_name''
--------------------------


This is a text file in reStructuredText format. First import ''say_my_name''
from the '3-say_my_name' module.

>>> say_my_name = __import__('3-say_my_name').say_my_name

Now use it:

:: Valid First and Last name

>>> say_my_name("Ted", "Mosby")
My name is Ted Mosby


:: Valid First Name

>>> say_my_name("Barney")
My name is Barney 


:: Invalid First Name

>>> say_my_name(None)
Traceback (most recent call last):
	...
TypeError: first_name must be a string


:: Invalid First Name

>>> say_my_name(1)
Traceback (most recent call last):
	...
TypeError: first_name must be a string


:: Invalid First Name

>>> say_my_name(True)
Traceback (most recent call last):
	...
TypeError: first_name must be a string


:: A valid name but a string

>>> say_my_name(str(1))
My name is 1 


:: Invalid Last Name

>>> say_my_name("Lily", 2)
Traceback (most recent call last):
	...
TypeError: last_name must be a string

::Invalid case - No arguments

>>> say_my_name()
Traceback (most recent call last):
	...
TypeError: say_my_name() missing 1 required positional argument: 'first_name'
